<?php
/**
 * Created by PhpStorm.
 * User: Slowbro
 * Date: 2019-12-16
 * Time: 14:51
 */

namespace App\Worker\Contracts;


use App\Event\Event;
use Workerman\Worker;

class BusinessWorker extends Worker
{
    protected $eventHandle;


    protected function eventHandler(){
        return Event::class;
    }

    public function run()
    {
        $this->onWorkerStart = array($this, 'onWorkerStart');
        parent::run(); // TODO: Change the autogenerated stub
    }


    public function onWorkerStart($worker){
        $eventHandler = $this->eventHandler();
        if (is_callable($eventHandler."::onWorkerStart")){
            $this->onWorkerStart = $eventHandler."::onWorkerStart";
            call_user_func($eventHandler."::onWorkerStart",$this);
        }

        if (is_callable($eventHandler."::onMessage")){
            $worker->onMessage = $eventHandler."::onMessage";
        }
        if (is_callable($eventHandler."::onError")){
            $worker->onError = $eventHandler."::onError";
        }
        if (is_callable($eventHandler."::onConnect")){
            $worker->onConnect = $eventHandler."::onConnect";
        }
        if (is_callable($eventHandler."::onClose")){
            $worker->onClose = $eventHandler."::onClose";
        }
        if (is_callable($eventHandler."::onWorkerReload")){
            $worker->onWorkerReload = $eventHandler."::onWorkerReload";
        }
    }
}